{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11220\viewh8100\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 -- MySQL Workbench Forward Engineering\
\
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;\
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;\
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';\
\
-- -----------------------------------------------------\
-- Schema university\
-- -----------------------------------------------------\
DROP SCHEMA IF EXISTS `university` ;\
\
-- -----------------------------------------------------\
-- Schema university\
-- -----------------------------------------------------\
CREATE SCHEMA IF NOT EXISTS `university` DEFAULT CHARACTER SET utf8 ;\
USE `university` ;\
\
-- -----------------------------------------------------\
-- Table `university`.`student`\
-- -----------------------------------------------------\
DROP TABLE IF EXISTS `university`.`student` ;\
\
CREATE TABLE IF NOT EXISTS `university`.`student` (\
  `student_id` INT NOT NULL,\
  `first_name` VARCHAR(50) NOT NULL,\
  `last_name` VARCHAR(50) NOT NULL,\
  `gender` ENUM('M', 'F') NOT NULL,\
  `city` VARCHAR(50) NOT NULL,\
  `state` CHAR(2) NOT NULL,\
  `birthdate` DATE NOT NULL,\
  PRIMARY KEY (`student_id`))\
ENGINE = InnoDB;\
\
\
-- -----------------------------------------------------\
-- Table `university`.`college`\
-- -----------------------------------------------------\
DROP TABLE IF EXISTS `university`.`college` ;\
\
CREATE TABLE IF NOT EXISTS `university`.`college` (\
  `college_id` INT NOT NULL,\
  `college` VARCHAR(125) NOT NULL,\
  PRIMARY KEY (`college_id`))\
ENGINE = InnoDB;\
\
\
-- -----------------------------------------------------\
-- Table `university`.`department`\
-- -----------------------------------------------------\
DROP TABLE IF EXISTS `university`.`department` ;\
\
CREATE TABLE IF NOT EXISTS `university`.`department` (\
  `department_id` INT NOT NULL,\
  `department_code` VARCHAR(10) NULL,\
  `department` VARCHAR(125) NULL,\
  `college_id` INT NOT NULL,\
  PRIMARY KEY (`department_id`),\
  INDEX `fk_department_college1_idx` (`college_id` ASC) VISIBLE,\
  CONSTRAINT `fk_department_college1`\
    FOREIGN KEY (`college_id`)\
    REFERENCES `university`.`college` (`college_id`)\
    ON DELETE NO ACTION\
    ON UPDATE NO ACTION)\
ENGINE = InnoDB;\
\
\
-- -----------------------------------------------------\
-- Table `university`.`course`\
-- -----------------------------------------------------\
DROP TABLE IF EXISTS `university`.`course` ;\
\
CREATE TABLE IF NOT EXISTS `university`.`course` (\
  `course_id` INT NOT NULL,\
  `course_num` INT NOT NULL,\
  `course_title` VARCHAR(125) NOT NULL,\
  `credits` INT NOT NULL,\
  `department_id` INT NOT NULL,\
  PRIMARY KEY (`course_id`),\
  INDEX `fk_course_department_idx` (`department_id` ASC) VISIBLE,\
  CONSTRAINT `fk_course_department`\
    FOREIGN KEY (`department_id`)\
    REFERENCES `university`.`department` (`department_id`)\
    ON DELETE NO ACTION\
    ON UPDATE NO ACTION)\
ENGINE = InnoDB;\
\
\
-- -----------------------------------------------------\
-- Table `university`.`term`\
-- -----------------------------------------------------\
DROP TABLE IF EXISTS `university`.`term` ;\
\
CREATE TABLE IF NOT EXISTS `university`.`term` (\
  `term_id` INT NOT NULL,\
  `term` ENUM('Fall', 'Winter') NOT NULL,\
  `year` YEAR NOT NULL,\
  PRIMARY KEY (`term_id`))\
ENGINE = InnoDB;\
\
\
-- -----------------------------------------------------\
-- Table `university`.`faculty`\
-- -----------------------------------------------------\
DROP TABLE IF EXISTS `university`.`faculty` ;\
\
CREATE TABLE IF NOT EXISTS `university`.`faculty` (\
  `faculty_id` INT NOT NULL,\
  `faculty_fname` VARCHAR(50) NOT NULL,\
  `faculty_lname` VARCHAR(50) NOT NULL,\
  PRIMARY KEY (`faculty_id`))\
ENGINE = InnoDB;\
\
\
-- -----------------------------------------------------\
-- Table `university`.`section`\
-- -----------------------------------------------------\
DROP TABLE IF EXISTS `university`.`section` ;\
\
CREATE TABLE IF NOT EXISTS `university`.`section` (\
  `section_id` INT NOT NULL,\
  `section` INT NOT NULL,\
  `capacity` INT NOT NULL,\
  `faculty_id` INT NOT NULL,\
  `term_id` INT NOT NULL,\
  `course_id` INT NOT NULL,\
  PRIMARY KEY (`section_id`),\
  INDEX `fk_section_faculty1_idx` (`faculty_id` ASC) VISIBLE,\
  INDEX `fk_section_term1_idx` (`term_id` ASC) VISIBLE,\
  INDEX `fk_section_course1_idx` (`course_id` ASC) VISIBLE,\
  CONSTRAINT `fk_section_faculty1`\
    FOREIGN KEY (`faculty_id`)\
    REFERENCES `university`.`faculty` (`faculty_id`)\
    ON DELETE NO ACTION\
    ON UPDATE NO ACTION,\
  CONSTRAINT `fk_section_term1`\
    FOREIGN KEY (`term_id`)\
    REFERENCES `university`.`term` (`term_id`)\
    ON DELETE NO ACTION\
    ON UPDATE NO ACTION,\
  CONSTRAINT `fk_section_course1`\
    FOREIGN KEY (`course_id`)\
    REFERENCES `university`.`course` (`course_id`)\
    ON DELETE NO ACTION\
    ON UPDATE NO ACTION)\
ENGINE = InnoDB;\
\
\
-- -----------------------------------------------------\
-- Table `university`.`enrollment`\
-- -----------------------------------------------------\
DROP TABLE IF EXISTS `university`.`enrollment` ;\
\
CREATE TABLE IF NOT EXISTS `university`.`enrollment` (\
  `student_id` INT NOT NULL,\
  `section_id` INT NOT NULL,\
  PRIMARY KEY (`student_id`, `section_id`),\
  INDEX `fk_student_has_section_section1_idx` (`section_id` ASC) VISIBLE,\
  INDEX `fk_student_has_section_student1_idx` (`student_id` ASC) VISIBLE,\
  CONSTRAINT `fk_student_has_section_student1`\
    FOREIGN KEY (`student_id`)\
    REFERENCES `university`.`student` (`student_id`)\
    ON DELETE NO ACTION\
    ON UPDATE NO ACTION,\
  CONSTRAINT `fk_student_has_section_section1`\
    FOREIGN KEY (`section_id`)\
    REFERENCES `university`.`section` (`section_id`)\
    ON DELETE NO ACTION\
    ON UPDATE NO ACTION)\
ENGINE = InnoDB;\
\
\
SET SQL_MODE=@OLD_SQL_MODE;\
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;\
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;\
\
-- Load the University database\
\
# Use Table\
use university;\
\
#Select Statements\
SELECT * FROM college;\
SELECT * FROM course;\
SELECT * FROM department;\
SELECT * FROM enrollment;\
SELECT * FROM faculty;\
SELECT * FROM section;\
SELECT * FROM student;\
SELECT * FROM term;\
\
# Insert Student\
INSERT INTO student (student_id, first_name, last_name, gender, city, state, birthdate) VALUES\
(1, 'Paul', 'Miller', 'M', 'Dallas', 'TX', '1996-02-22'),\
(2, 'Katie', 'Smith', 'F', 'Provo', 'UT', '1995-07-22'),\
(3, 'Kelly', 'Jones', 'F', 'Provo', 'UT', '1998-06-22'),\
(4, 'Devon', 'Merrill', 'M', 'Mesa', 'AZ', '2000-07-22'),\
(5, 'Mandy', 'Murdock', 'F', 'Topeka', 'KS', '1996-11-22'),\
(6, 'Alece', 'Adams', 'F', 'Rigby', 'ID', '1997-05-22'),\
(7, 'Bryce', 'Carlson', 'M', 'Bozeman', 'MT', '1997-11-22'),\
(8, 'Preston', 'Larsen', 'M', 'Decatur', 'TN', '1996-09-22'),\
(9, 'Julia', 'Madsen', 'F', 'Rexburg', 'ID', '1998-09-22'),\
(10, 'Susan', 'Sorensen', 'F', 'Mesa', 'AZ', '1998-08-09');\
\
# Insert college\
INSERT INTO college (college_id, college) VALUES\
(1, 'College of Physical Science and Engineering'),\
(2, 'College of Business and Communication'),\
(3, 'College of Language and Letters');\
\
# Insert Faculty\
INSERT INTO faculty (faculty_id, faculty_fname, faculty_lname) VALUES\
(1, 'Marty', 'Morring'),\
(2, 'Nate', 'Norris'),\
(3, 'Ben', 'Barrus'),\
(4, 'John', 'Jensen'),\
(5, 'Bill', 'Barney');\
\
# Insert Term\
INSERT INTO term (term_id, term, year) VALUES\
(1, 'Fall', 2019),\
(2, 'Winter', 2018);\
\
# Insert Department\
INSERT INTO department (department_id, department_code, department, college_id) VALUES\
(1, 'ITM', 'Computer Information Technology', 1),\
(2, 'ECON', 'Economics', 2),\
(3, 'HUM', 'Humanities and Philosophy', 3);\
\
# Insert Course\
INSERT INTO course (course_id, course_num, course_title, credits, department_id) VALUES\
(1, 111, 'Intro to Databases', 3, 1),\
(2, 388, 'Econometrics', 4, 2),\
(3, 150, 'Micro Economics', 3, 2),\
(4, 376, 'Classical Heritage', 2, 3);\
\
# Insert Section\
INSERT INTO section (section_id, section, capacity, faculty_id, term_id, course_id) VALUES\
(1, 1, 30, 1, 1, 1),   -- Fall 2019, ITM 111, Marty Morring\
(2, 1, 50, 2, 1, 3),   -- Fall 2019, ECON 150, Nate Norris\
(3, 2, 50, 2, 1, 3),   -- Fall 2019, ECON 150, Nate Norris\
(4, 1, 35, 3, 1, 2),   -- Fall 2019, ECON 388, Ben Barrus\
(5, 1, 30, 4, 1, 4),   -- Fall 2019, HUM 376, John Jensen\
(6, 2, 30, 1, 2, 1),   -- Winter 2018, ITM 111, Marty Morring\
(7, 3, 35, 5, 2, 1),   -- Winter 2018, ITM 111, Bill Barney\
(8, 1, 50, 2, 2, 3),   -- Winter 2018, ECON 150, Nate Norris\
(9, 2, 50, 2, 2, 3),   -- Winter 2018, ECON 150, Nate Norris\
(10, 1, 30, 4, 2, 4);  -- Winter 2018, HUM 376, John Jensen\
\
# Insert enrollment\
INSERT INTO enrollment (student_id, section_id) VALUES\
(6, 7),   -- Alece = 6, Section_id = 7 - ITM 111, Winter 2018, Section 3\
(7, 6),   -- Bryce = 7, Section_id = 6 - ITM 111, Winter 2018, Section 2\
(7, 8),   -- Bryce = 7, Section_id = 8 - ECON 150, Winter 2018, Section 1\
(7, 10),  -- Bryce = 7, Section_id = 10 - HUM 376, Winter 2018, Section 1\
(4, 5),   -- Devon = 4, Section_id = 5 - HUM 376, Fall 2019, Section 1\
(9, 9),   -- Julia = 9, Section_id = 9 - ECON 150, Winter 2018, Section 2\
(2, 4),   -- Katie = 2, Section_id = 4 - ECON 388, Fall 2019, Section 1\
(3, 4),   -- Kelly = 3, Section_id = 4 - ECON 388, Fall 2019, Section 1\
(5, 4),   -- Mandy = 5, Section_id = 4 - ECON 388, Fall 2019, Section 1\
(5, 5),   -- Mandy = 5, Section_id = 5 - HUM 376, Fall 2019, Section 1\
(1, 1),   -- Paul = 1, Section_id = 1 - ITM 111, Fall 2019, Section 1\
(1, 3),   -- Paul = 1, Section_id = 3 - ECON 150, Fall 2019, Section 2\
(8, 9),   -- Preston = 8, Section_id = 9 - ECON 150, Winter 2018, Section 2\
(10, 6);  -- Susan = 10, Section_id = 6 - ITM 111, Winter 2018, Section 2\
\
-- Query the University database\
\
# 1\
SELECT first_name AS fname, last_name AS lname, DATE_FORMAT(birthdate, '%M %D, %Y') AS 'Sept Birthdays'\
FROM student\
WHERE Month(birthdate) = 9\
ORDER BY last_name;\
\
# 2 \
SELECT last_name AS lname, first_name AS fname, \
		FLOOR(DATEDIFF('2017-01-05', birthdate) / 365) AS Years, \
		DATEDIFF('2017-01-05', birthdate) % 365 AS Days,\
		CONCAT(FLOOR(DATEDIFF('2017-01-05', birthdate) / 365), ' - Yrs, ', DATEDIFF('2017-01-05', birthdate) % 365, ' - Days') AS 'Years and Days'\
FROM student\
ORDER BY birthdate;\
\
# 3\
-- Using First Name and Last Name\
SELECT first_name AS fname, last_name AS lname\
FROM section sec\
	JOIN enrollment e\
    ON sec.section_id = e.section_id\
    JOIN student s\
    ON e.student_id = s.student_id\
    JOIN faculty f\
    ON sec.faculty_id = f.faculty_id\
WHERE f.faculty_fname = 'John'\
  AND f.faculty_lname = 'Jensen'\
ORDER BY s.last_name;\
\
-- Using Primary Key\
SELECT first_name AS fname, last_name AS lname\
FROM section sec\
	JOIN enrollment e\
    ON sec.section_id = e.section_id\
    JOIN student s\
    ON e.student_id = s.student_id\
    JOIN faculty f\
    ON sec.faculty_id = f.faculty_id\
WHERE f.faculty_id = 4\
ORDER BY s.last_name;\
\
# 4\
-- Using First Name\
SELECT f.faculty_fname AS fname, f.faculty_lname AS lname\
FROM faculty f\
	JOIN section sec\
    ON f.faculty_id = sec.faculty_id\
    JOIN enrollment e\
    ON sec.section_id = e.section_id\
    JOIN student s\
    ON e.student_id = s.student_id\
    JOIN term t \
    ON sec.term_id = t.term_id\
WHERE s.first_name = 'Bryce'\
 AND t.term = 'Winter'\
 AND t.year = 2018\
ORDER BY f.faculty_lname;\
\
-- Using Using Primary Key\
SELECT f.faculty_fname AS fname, f.faculty_lname AS lname\
FROM faculty f\
	JOIN section sec\
    ON f.faculty_id = sec.faculty_id\
    JOIN enrollment e\
    ON sec.section_id = e.section_id\
    JOIN student s\
    ON e.student_id = s.student_id\
    JOIN term t \
    ON sec.term_id = t.term_id\
WHERE s.student_id = 7\
 AND t.term = 'Winter'\
 AND t.year = 2018\
ORDER BY f.faculty_lname;\
\
# 5\
-- Using Course Title\
SELECT first_name AS fname, last_name AS lname\
FROM section sec\
	JOIN enrollment e\
    ON sec.section_id = e.section_id\
    JOIN term t \
    ON sec.term_id = t.term_id\
    JOIN student s\
    ON e.student_id = s.student_id\
    JOIN course c\
    ON sec.course_id = c.course_id\
WHERE c.course_title = 'Econometrics'\
 AND t.term = 'Fall'\
 AND t.year = 2019\
ORDER BY s.last_name;\
\
# 6\
-- Using First Name and Last Name\
SELECT d.department_code, c.course_num, c.course_title AS 'name'\
FROM course c\
	JOIN section sec\
    ON c.course_id = sec.course_id\
    JOIN department d\
    ON c.department_id = d.department_id\
    JOIN enrollment e\
    ON sec.section_id = e.section_id\
    JOIN student s\
    ON e.student_id = s.student_id\
    JOIN term t \
    ON sec.term_id = t.term_id\
WHERE s.first_name = 'Bryce'\
 AND s.last_name = 'Carlson'\
 AND t.term = 'Winter'\
 AND t.year = 2018\
ORDER BY c.course_title ASC;\
\
-- Using Primary Key\
SELECT d.department_code, c.course_num, c.course_title AS 'name'\
FROM course c\
	JOIN section sec\
    ON c.course_id = sec.course_id\
    JOIN department d\
    ON c.department_id = d.department_id\
    JOIN enrollment e\
    ON sec.section_id = e.section_id\
    JOIN student s\
    ON e.student_id = s.student_id\
    JOIN term t \
    ON sec.term_id = t.term_id\
WHERE s.student_id = 7\
 AND t.term = 'Winter'\
 AND t.year = 2018\
ORDER BY c.course_title ASC;\
\
# 7\
SELECT t.term, t.year, COUNT(e.student_id) AS 'Enrollment'\
FROM section sec\
	JOIN term t \
    ON sec.term_id = t.term_id\
    JOIN enrollment e\
    ON sec.section_id = e.section_id\
    JOIN student s\
    ON e.student_id = s.student_id\
WHERE t.term = 'Fall'\
 AND t.year = 2019\
 GROUP BY t.term, t.year;\
\
# 8\
SELECT college AS Colleges, COUNT(DISTINCT cs.course_id) AS Courses\
FROM college c\
	JOIN department d\
    ON c.college_id = d.college_id\
    JOIN course cs\
    ON cs.department_id = d.department_id\
GROUP BY c.college\
ORDER BY c.college;\
\
# 9\
SELECT f.faculty_fname AS fname, f.faculty_lname AS lname, sum(capacity) AS TeachingCapacity\
FROM faculty f\
	JOIN section sec\
    ON f.faculty_id = sec.faculty_id\
    JOIN term t \
    ON sec.term_id = t.term_id\
WHERE t.term = 'Winter'\
 AND t.year = 2018\
GROUP BY f.faculty_id\
ORDER BY TeachingCapacity;\
\
# 10\
SELECT last_name AS lname, first_name AS fname, SUM(c.credits) AS Credits\
FROM section sec\
	JOIN enrollment e\
    ON sec.section_id = e.section_id\
    JOIN term t \
    ON sec.term_id = t.term_id\
    JOIN student s\
    ON e.student_id = s.student_id\
    JOIN course c\
    ON sec.course_id = c.course_id\
WHERE t.term = 'Fall'\
 AND t.year = 2019\
GROUP BY s.student_id\
HAVING (Credits > 3)\
ORDER BY Credits DESC;}